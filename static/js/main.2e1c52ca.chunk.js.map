{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","this","props","totalCounters","Component","Counter","getBadgetClasses","counter","name","formatcounter","onClick","onIncrement","onDecrement","onDelete","id","classes","value","Counters","onReset","onAdd","counters","length","onDeleteAll","map","App","state","handleIncrement","index","indexOf","setState","handleDecrement","handleDelete","counterId","filter","c","handleReset","console","log","handleAddition","prevState","handleDeleteAll","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e1c52ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass  NavBar extends Component {\r\n  render() { \r\n    return (  \r\n    <nav className=\"navbar navbar-light bg-light\">\r\n    <a className=\"navbar-brand\" href=\"#\">\r\n      shopping cart \r\n      <span className=\"badge badge-pill badge-secondary m-2\"> {this.props.totalCounters}</span>\r\n      </a>\r\n  </nav>\r\n  );\r\n  }\r\n}\r\n \r\nexport default NavBar ;","import React, { Component } from 'react';\r\nclass Counter extends Component {\r\n  \r\nrender() { \r\n    return( \r\n    <div>\r\n      <input/>\r\n      <span  className= {this.getBadgetClasses()}>{this.props.counter.name} {this.formatcounter()}</span>\r\n      <button\r\n       onClick={() => this.props.onIncrement(this.props.counter)} \r\n       className=\"btn btn-secondary btn-sm m-2\">\r\n         Increment\r\n         </button>\r\n         <button\r\n       onClick={() => this.props.onDecrement(this.props.counter)} \r\n       className=\"btn btn-secondary btn-sm m-2\">\r\n         Decrement\r\n         </button>\r\n         <button onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className='btn btn-danger btn-sm m-2'> \r\n          delete</button>\r\n    </div>\r\n    );\r\n  }\r\n  getBadgetClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatcounter()\r\n  {\r\n    const {value}=this.props.counter;\r\n    return value ===0 ? \"zero\" :value;\r\n  \r\n}\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\nclass Counters extends Component {\r\n \r\n \r\n  render() { \r\n    return ( \r\n      <div>\r\n        <button\r\n        onClick={this.props.onReset}\r\n        className=\"btn btn-primary btn-sm m-2\">Reset</button>\r\n        \r\n        <button\r\n        onClick= {this.props.onAdd}\r\n        className=\"btn btn-primary btn-sm m-2\">add counters{this.props.counters.length}\r\n        </button>\r\n        <button\r\n        onClick={this.props.onDeleteAll}\r\n        className=\"btn btn-primary btn-sm m-2\">Delete All</button>\r\n        {this.props.counters.map(counter => (<Counter \r\n        key={counter.id}\r\n        onDelete={this.props.onDelete}\r\n        onIncrement={this.props.onIncrement}\r\n        onDecrement={this.props.onDecrement}\r\n        counter={counter}\r\n        />))}\r\n      </div>\r\n      \r\n     );\r\n  }\r\n}\r\n \r\nexport default Counters;","import NavBar from './components/navbar';\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport './App.css';\nclass App extends Component{\n  state = { \n    counters :[\n    ]\n  };\n  handleIncrement = counter =>{\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index]={...counter};\n    counters[index].value++;\n    this.setState({counters});\n\n  };\n  handleDecrement = counter =>{\n\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index]={...counter};\n    if(counters[index].value>0)\n    {\n    counters[index].value--;\n    this.setState({counters});}\n\n  };\n  handleDelete= counterId=>{\n    const counters= this.state.counters.filter( c => c.id!==counterId);\n    this.setState({counters:counters});\n\n\n  };\n  handleReset = ()=>{\n    console.log(\"reset turned\");\n    const counters = this.state.counters.map(c=>{c.value=0;return c;});\n    this.setState({ counters})\n  };\n  handleAddition =() => {\n    console.log(\"addition\");\n\n    this.setState(prevState => ({\n      counters: [\n          ...prevState.counters, \n          {id:prevState.counters.length+1,value:0}\n      ]\n  }))\n  };\n  handleDeleteAll = ()=>{\n    const counters=[];\n    this.setState({counters})\n  }\n render(){\n  return (\n    <React.Fragment>\n      <NavBar  totalCounters={this.state.counters.filter(c=>c.value>0).length}/>\n    <main className=\" container\">\n      <Counters \n      counters={this.state.counters}\n      onDelete={this.handleDelete}\n      onAdd={this.handleAddition}\n      onReset={this.handleReset}\n      onIncrement={this.handleIncrement}\n      onDecrement={this.handleDecrement}\n      onDeleteAll={this.handleDeleteAll}\n      />\n    </main>\n    </React.Fragment>\n    \n\n  );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}